# whitelist branches to avoid testing feature branches twice (as branch and as pull request)
branches:
  only:
    - master

environment:
  matrix:
    # AppVeyor installed Python versions
    # http://www.appveyor.com/docs/installed-software#python

    - PYTHON_INSTALL: "C:\\Python27"
    - PYTHON_INSTALL: "C:\\Python33"
    - PYTHON_INSTALL: "C:\\Python34"
    - PYTHON_INSTALL: "C:\\Python35"

install:
  # Make compiler available (use MSVC 2013, 32 bit)
  - call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86

  # Check compiler version
  - cl

  # Prepend Python installation to PATH
  - set PATH=%PYTHON_INSTALL%;%PATH%

  # Prepend Python scripts to PATH (e.g. pip, py.test, pylint)
  - set PATH=%PYTHON_INSTALL%\\Scripts;%PATH%

  # Check Python version
  - python --version

  # Install pytest
  - pip install pytest

  # Install pylint (installs pylint.exe in %PYTHON_INSTALL%\Scripts)
  - pip install pylint
  - pylint --version

build_script:
  - python clcache.py --help
  - python clcache.py -s
  - pylint --rcfile=.pylintrc clcache.py
  - pylint --rcfile=.pylintrc unittests.py
  - pylint --rcfile=.pylintrc integrationtests.py

test_script:
  # Run test files via py.test and generate JUnit XML. Then push test results
  # to appveyor.
  - ps: >-
      & py.test --junitxml .\unittests.xml unittests.py
      $testsExitCode = $lastexitcode

      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\unittests.xml))

      if ($testsExitCode -ne 0) {exit $testsExitCode}

  - ps: >-
      & py.test --junitxml .\integrationtests.xml integrationtests.py
      $testsExitCode = $lastexitcode

      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\integrationtests.xml))

      if ($testsExitCode -ne 0) {exit $testsExitCode}

after_test:
  # Get a rough overview about what happened in the tests.
  # This is not part of the actual testing but pure convenience.
  - python clcache.py -s
